(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>f});var r=n(537),o=n.n(r),a=n(645),i=n.n(a),c=n(667),s=n.n(c),A=new URL(n(770),n.b),l=new URL(n(464),n.b),d=new URL(n(159),n.b),u=i()(o()),p=s()(A),m=s()(l),C=s()(d);u.push([t.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n.content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n\ttransition: 1000ms;\n}\n\n#rainy {\n\tbackground-image: url("+p+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#cloudy {\n\tbackground-image: url("+m+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#clear {\n\tbackground-image: url("+C+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\ninput {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\ttext-align: center;\n\tmargin-right: 2rem;\n}\n\nform button {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\tbackground-color: white;\n\ttransition: 500ms;\n}\n\nbutton:hover {\n\tfilter: brightness(0.8);\n}\n\n#unit-switch {\n\tborder-radius: 0.5rem;\n\tfont-size: 1rem;\n\tpadding: 0.5rem 1.5rem;\n\ttransition: 500ms;\n}\n\n#date {\n\tfont-size: 1.5rem;\n}\n\n.temperature::before {\n\tcontent: 'Temperature: ';\n}\n\n.metric.temperature::after,\n.metric.feels::after,\n.metric.actual::after {\n\tcontent: '\\00B0 C';\n}\n\n.speed::before {\n\tcontent: 'Wind Speed: ';\n}\n\n.metric.speed::after {\n\tcontent: 'kph';\n}\n\n.imperial.temperature::after,\n.imperial.feels::after,\n.imperial.actual::after {\n\tcontent: '\\00B0 F';\n}\n\n.imperial.speed::after {\n\tcontent: 'mph';\n}\n\n.feels::before {\n\tcontent: 'Feels Like: '\n}\n\n.actual::before {\n\tcontent: 'Actual: '\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\tfont-size: 1.5rem;\n\ttext-align: center;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n.forecast-date {\n\tfont-size: 2rem;\n}\n\n.forecast-date::after {\n\tcontent: '\\A   ';\n\twhite-space: pre;\n}\n\n.weather-state::before {\n\tcontent: 'Weather: ';\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,gEAAgE;AAChE;CACC,6BAA6B;AAC9B;;AAEA;CACC,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;;CAEnB,YAAY;CACZ,aAAa;;CAEb,kBAAkB;AACnB;;AAEA;CACC,yDAAoC;IACjC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,yDAAqC;IAClC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,yDAAwC;IACrC,sBAAsB;IACtB,4BAA4B;AAChC;;;;AAIA;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;CACT,iBAAiB;CACjB,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;AACV;;AAEA;CACC,WAAW;;CAEX,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;;CAEnB,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;;CAET,eAAe;AAChB;;AAEA;CACC,qBAAqB;;CAErB,iBAAiB;CACjB,kBAAkB;CAClB,kBAAkB;AACnB;;AAEA;CACC,qBAAqB;;CAErB,iBAAiB;CACjB,uBAAuB;CACvB,iBAAiB;AAClB;;AAEA;CACC,uBAAuB;AACxB;;AAEA;CACC,qBAAqB;CACrB,eAAe;CACf,sBAAsB;CACtB,iBAAiB;AAClB;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,wBAAwB;AACzB;;AAEA;;;CAGC,kBAAkB;AACnB;;AAEA;CACC,uBAAuB;AACxB;;AAEA;CACC,cAAc;AACf;;AAEA;;;CAGC,kBAAkB;AACnB;;AAEA;CACC,cAAc;AACf;;AAEA;CACC;AACD;;AAEA;CACC;AACD;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,aAAa;CACb,6BAA6B;CAC7B,mBAAmB;CACnB,UAAU;CACV,iBAAiB;CACjB,iBAAiB;CACjB,kBAAkB;;CAElB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,gBAAgB;CAChB,gBAAgB;AACjB;;AAEA;CACC,oBAAoB;AACrB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n.content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n\ttransition: 1000ms;\n}\n\n#rainy {\n\tbackground-image: url('./rainy.jpg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#cloudy {\n\tbackground-image: url('./cloudy.jpg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#clear {\n\tbackground-image: url('./clearsky.jpeg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\ninput {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\ttext-align: center;\n\tmargin-right: 2rem;\n}\n\nform button {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\tbackground-color: white;\n\ttransition: 500ms;\n}\n\nbutton:hover {\n\tfilter: brightness(0.8);\n}\n\n#unit-switch {\n\tborder-radius: 0.5rem;\n\tfont-size: 1rem;\n\tpadding: 0.5rem 1.5rem;\n\ttransition: 500ms;\n}\n\n#date {\n\tfont-size: 1.5rem;\n}\n\n.temperature::before {\n\tcontent: 'Temperature: ';\n}\n\n.metric.temperature::after,\n.metric.feels::after,\n.metric.actual::after {\n\tcontent: '\\00B0 C';\n}\n\n.speed::before {\n\tcontent: 'Wind Speed: ';\n}\n\n.metric.speed::after {\n\tcontent: 'kph';\n}\n\n.imperial.temperature::after,\n.imperial.feels::after,\n.imperial.actual::after {\n\tcontent: '\\00B0 F';\n}\n\n.imperial.speed::after {\n\tcontent: 'mph';\n}\n\n.feels::before {\n\tcontent: 'Feels Like: '\n}\n\n.actual::before {\n\tcontent: 'Actual: '\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\tfont-size: 1.5rem;\n\ttext-align: center;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n.forecast-date {\n\tfont-size: 2rem;\n}\n\n.forecast-date::after {\n\tcontent: '\\A   ';\n\twhite-space: pre;\n}\n\n.weather-state::before {\n\tcontent: 'Weather: ';\n}"],sourceRoot:""}]);const f=u},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<t.length;A++){var l=[].concat(t[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var a={},i=[],c=0;c<t.length;c++){var s=t[c],A=r.base?s[0]+r.base:s[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=n(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var a=r(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var c=n(a[i]);e[c].references--}for(var s=r(t,o),A=0;A<a.length;A++){var l=n(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},159:(t,e,n)=>{t.exports=n.p+"7da5ba54b6139d94d7ef.jpeg"},464:(t,e,n)=>{t.exports=n.p+"2a34ad296faa40d5d03e.jpg"},770:(t,e,n)=>{t.exports=n.p+"cda0fd930c91dce5cfe0.jpg"}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return t[r](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{const t=n.p+"f085dc019f40aaa92648.png",e=n.p+"53d600cc58b5d57e1280.png",r=n.p+"6af909d05d592fc08ec3.png",o=n.p+"ae3156cbe67c65443e7f.png",a=()=>{const t=document.getElementsByClassName("metric"),e=document.getElementsByClassName("imperial");for(let e=0;e<t.length;e+=1)if(t[e].classList.contains("temperature")){let n=Number(t[e].innerHTML);console.log(n),n=1.8*n+32,console.log(n),t[e].innerHTML=n.toPrecision(3),console.log(n)}else if(t[e].classList.contains("speed")){let n=Number(t[e].innerHTML);n/=1.609,console.log(t[e]),t[e].innerHTML=n.toPrecision(3)}for(let t=0;t<e.length;t+=1)if(e[t].classList.contains("temperature")){let n=Number(e[t].innerHTML);n=5/9*(n-32),e[t].innerHTML=n.toPrecision(3)}else if(e[t].classList.contains("speed")){let n=Number(e[t].innerHTML);n*=1.609,e[t].innerHTML=n.toPrecision(3)}const n=document.getElementsByClassName("speed"),r=document.getElementsByClassName("temperature");for(let t=0;t<n.length;t+=1)n[t].classList.toggle("imperial"),n[t].classList.toggle("metric");for(let t=0;t<r.length;t+=1)r[t].classList.toggle("imperial"),r[t].classList.toggle("metric");null===localStorage.getItem("unit")||"imperial"===localStorage.getItem("unit")?localStorage.setItem("unit","metric"):"metric"===localStorage.getItem("unit")&&localStorage.setItem("unit","imperial")};async function i(n){let c,s;try{const A="cd422b923b03f0e42f9bffddb3a4239d",l=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${n}&limit=1&appid=${A}`,{mode:"cors"}),d=await l.json(),{lon:u}=d[0],{lat:p}=d[0],m=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${p}&lon=${u}&appid=${A}`);c=await m.json();const C=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${p}&lon=${u}&appid=${A}`);s=await C.json(),(()=>{const t=document.querySelector("#topContent"),e=document.querySelector("#botContent");for(;t.hasChildNodes();)t.removeChild(t.firstChild);for(;e.hasChildNodes();)e.removeChild(e.firstChild)})(),((t,e="botContent")=>{for(let n=7;n<t.list.length;n+=8){const r=document.getElementById(`${e}`),o=document.createElement("div"),a=new Date,i=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];a.setTime(1e3*t.list[n].dt);const c=document.createElement("p");c.classList.add("forecast-date"),c.innerHTML=`${a.getDate()} ${i[a.getMonth()]}`;const s=document.createElement("p");s.classList.add("weather-state"),s.innerHTML=t.list[n].weather[0].main;const A=document.createElement("p");A.classList.add("metric"),A.classList.add("temperature"),A.classList.add("feels");const l=(t.list[n].main.feels_like-273.15).toPrecision(3);A.innerHTML=l;const d=document.createElement("p");d.classList.add("metric"),d.classList.add("temperature"),d.classList.add("actual");const u=(t.list[n].main.temp-273.15).toPrecision(3);d.innerHTML=u,o.appendChild(c),o.appendChild(s),o.appendChild(A),o.appendChild(d),r.appendChild(o)}})(s),((n,c="topContent",s="content")=>{const{name:A}=n,l=n.weather[0].description,d=n.weather[0].main;let{temp:u}=n.main;const{speed:p}=n.wind,{humidity:m}=n.main;u-=273.15,u=u.toPrecision(3);const C=document.createElement("button");C.setAttribute("id","unit-switch"),C.innerHTML="Switch Units",C.addEventListener("click",(()=>{a()}));const f=document.createElement("p");f.innerHTML=`${A}`;const g=document.createElement("p"),b=l.split(" ");let h="";for(let t=0;t<b.length;t+=1)h+=`${b[t].slice(0,1).toUpperCase()}${b[t].slice(1,b[t].length)} `;h.trimEnd(),g.innerHTML=`${h}`;const B=document.createElement("p");B.innerHTML=`${u}`,B.classList.add("metric"),B.classList.add("temperature");const y=document.createElement("p");y.innerHTML=`Humidity: ${m}%`;const v=document.createElement("p");v.innerHTML=`${(3.6*p).toPrecision(3)}`,v.classList.add("metric"),v.classList.add("speed");const E=new Date;E.setTime(1e3*n.dt);const w=document.createElement("p");w.setAttribute("id","date"),w.innerHTML=`${E.getDate()} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][E.getMonth()]}, ${["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"][E.getDay()-1]}`;const x=document.createElement("img"),k=document.querySelector(`.${s}`);switch(!0){case"Thunderstorm"===d:x.setAttribute("src",`${r}`),x.setAttribute("alt","Thunderstorm Icon"),k.setAttribute("id","rainy");break;case"Drizzle"===d||"Rain"===d||"Snow"===d:x.setAttribute("src",`${e}`),x.setAttribute("alt","Rain Icon"),k.setAttribute("id","rainy");break;case"Clear"===d:x.setAttribute("src",`${o}`),x.setAttribute("alt","Clear Icon"),k.setAttribute("id","clear");break;case"Clouds"===d:x.setAttribute("src",`${t}`),x.setAttribute("alt","Cloudy Icon"),k.setAttribute("id","cloudy");break;default:k.classList("clear")}const L=document.getElementById(`${c}`),T=document.createElement("div");T.setAttribute("id","top-first");const S=document.createElement("div");S.setAttribute("id","top-second");const j=document.createElement("div");j.setAttribute("id","top-third");const M=document.createElement("div");M.setAttribute("id","top-fourth"),T.appendChild(C),T.appendChild(w),S.appendChild(f),j.appendChild(g),j.appendChild(x),M.appendChild(B),M.appendChild(y),M.appendChild(v),L.appendChild(T),L.appendChild(S),L.appendChild(j),L.appendChild(M),(t=>{const e=document.createElement("form"),n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","location"),n.setAttribute("placeholder","Location");const r=document.createElement("button");r.setAttribute("type","submit"),r.innerHTML="Search";const o=document.getElementById("top-first");e.appendChild(n),e.appendChild(r),o.insertBefore(e,o.firstChild)})(),(()=>{const t=document.querySelector("form"),e=document.querySelector("input");t.onsubmit=()=>(i(e.value),!1)})(),"imperial"===localStorage.getItem("unit")&&(a(),localStorage.setItem("unit","imperial"))})(c)}catch(t){console.log(t)}return[c,s]}const c=i;var s=n(379),A=n.n(s),l=n(795),d=n.n(l),u=n(569),p=n.n(u),m=n(565),C=n.n(m),f=n(216),g=n.n(f),b=n(589),h=n.n(b),B=n(426),y={};y.styleTagTransform=h(),y.setAttributes=C(),y.insert=p().bind(null,"head"),y.domAPI=d(),y.insertStyleElement=g(),A()(B.Z,y),B.Z&&B.Z.locals&&B.Z.locals,(()=>{const t=document.querySelector("body"),e=document.createElement("div");e.classList.add("content");const n=document.createElement("div");n.setAttribute("id","topContent");const r=document.createElement("div");r.setAttribute("id","botContent"),e.appendChild(n),e.appendChild(r),t.appendChild(e)})(),c("Singapore")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,