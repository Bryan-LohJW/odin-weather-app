(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(537),o=n.n(r),i=n(645),a=n.n(i),c=n(667),s=n.n(c),l=new URL(n(159),n.b),d=a()(o()),A=s()(l);d.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n#content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url("+A+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\n.temperature::before {\n\tcontent: 'Temperature: ';\n}\n\n.metric.temperature::after {\n\tcontent: '\\00B0 C';\n}\n\n.speed::before {\n\tcontent: 'Wind Speed: ';\n}\n\n.metric.speed::after {\n\tcontent: 'kph';\n}\n\n.imperial.temperature::after {\n\tcontent: '\\00B0 F';\n}\n\n.imperial.speed::after {\n\tcontent: 'mph';\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,gEAAgE;AAChE;CACC,6BAA6B;AAC9B;;AAEA;CACC,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;;CAEnB,YAAY;CACZ,aAAa;;IAEV,yDAAwC;IACxC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;CACT,iBAAiB;CACjB,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;AACV;;AAEA;CACC,WAAW;;CAEX,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;;CAEnB,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;;CAET,eAAe;AAChB;;AAEA;CACC,wBAAwB;AACzB;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,uBAAuB;AACxB;;AAEA;CACC,cAAc;AACf;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,cAAc;AACf;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,aAAa;CACb,6BAA6B;CAC7B,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n#content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url('./clearsky.jpeg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\n.temperature::before {\n\tcontent: 'Temperature: ';\n}\n\n.metric.temperature::after {\n\tcontent: '\\00B0 C';\n}\n\n.speed::before {\n\tcontent: 'Wind Speed: ';\n}\n\n.metric.speed::after {\n\tcontent: 'kph';\n}\n\n.imperial.temperature::after {\n\tcontent: '\\00B0 F';\n}\n\n.imperial.speed::after {\n\tcontent: 'mph';\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}"],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var p=n(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=o(u,r);r.byIndex=c,t.splice(c,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var s=r(e,o),l=0;l<i.length;l++){var d=n(i[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},159:(e,t,n)=>{e.exports=n.p+"7da5ba54b6139d94d7ef.jpeg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{async function e(t){let n,r;try{const o="cd422b923b03f0e42f9bffddb3a4239d",i=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${t}&limit=1&appid=${o}`,{mode:"cors"}),a=await i.json(),{lon:c}=a[0],{lat:s}=a[0],l=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${s}&lon=${c}&appid=${o}`);n=await l.json();const d=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${s}&lon=${c}&appid=${o}`);r=await d.json(),(()=>{const e=document.querySelector("#topContent"),t=document.querySelector("#botContent");for(;e.hasChildNodes();)e.removeChild(e.firstChild);for(;t.hasChildNodes();)t.removeChild(t.firstChild)})(),((t,n="topContent",r="content")=>{const{name:o}=t,i=t.weather[0].description,a=t.weather[0].main;let{temp:c}=t.main;const{speed:s}=t.wind,{humidity:l}=t.main;c-=273.15,c=c.toPrecision(3);const d=document.createElement("button");d.setAttribute("id","unit-switch"),d.addEventListener("click",(()=>{(()=>{const e=document.getElementsByClassName("metric"),t=document.getElementsByClassName("imperial");for(let t=0;t<e.length;t+=1)if(e[t].classList.contains("temperature")){let n=Number(e[t].innerHTML);console.log(n),n=1.8*n+32,console.log(n),e[t].innerHTML=n.toPrecision(3),console.log(n)}else if(e[t].classList.contains("speed")){let n=Number(e[t].innerHTML);n/=1.609,console.log(e[t]),e[t].innerHTML=n.toPrecision(3)}for(let e=0;e<t.length;e+=1)if(t[e].classList.contains("temperature")){let n=Number(t[e].innerHTML);n=5/9*(n-32),t[e].innerHTML=n.toPrecision(3)}else if(t[e].classList.contains("speed")){let n=Number(t[e].innerHTML);n*=1.609,t[e].innerHTML=n.toPrecision(3)}const n=document.getElementsByClassName("speed"),r=document.getElementsByClassName("temperature");for(let e=0;e<n.length;e+=1)n[e].classList.toggle("imperial"),n[e].classList.toggle("metric");for(let e=0;e<r.length;e+=1)r[e].classList.toggle("imperial"),r[e].classList.toggle("metric");console.log("success")})()}));const A=document.createElement("p");A.innerHTML=`${o}`;const p=document.createElement("p"),u=i.split(" ");let m="";for(let e=0;e<u.length;e+=1)m+=`${u[e].slice(0,1).toUpperCase()}${u[e].slice(1,u[e].length)} `;m.trimEnd(),p.innerHTML=`${m}`;const C=document.createElement("p");C.innerHTML=`${c}`,C.classList.add("metric"),C.classList.add("temperature");const f=document.createElement("p");f.innerHTML=`Humidity: ${l}%`;const h=document.createElement("p");h.innerHTML=`${(3.6*s).toPrecision(3)}`,h.classList.add("metric"),h.classList.add("speed");const b=new Date;b.setTime(1e3*t.dt);const g=document.createElement("p");g.innerHTML=`${b.getDate()} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][b.getMonth()]}, ${["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"][b.getDay()-1]}`;const B=document.createElement("img"),y=document.getElementById(`${r}`);switch(!0){case"Thunderstorm"===a:B.setAttribute("src","../src/icons8-storm-96.png"),B.setAttribute("alt","Thunderstorm Icon"),y.classList.add("rainy");break;case"Drizzle"===a||"Rain"===a||"Snow"===a:B.setAttribute("src","../src/icons8-rain-96.png"),B.setAttribute("alt","Rain Icon"),y.classList.add("rainy");break;case"Clear"===a:B.setAttribute("src","../src/icons8-sun-192.png"),B.setAttribute("alt","Clear Icon"),y.classList.add("clear");break;case"Clouds"===a:B.setAttribute("src","../src/icons8-cloud-96.png"),B.setAttribute("alt","Cloudy Icon"),y.classList.add("cloudy");break;default:y.classList("clear")}const v=document.getElementById(`${n}`),E=document.createElement("div");E.setAttribute("id","top-first");const x=document.createElement("div");x.setAttribute("id","top-second");const w=document.createElement("div");w.setAttribute("id","top-third");const L=document.createElement("div");L.setAttribute("id","top-fourth"),E.appendChild(d),E.appendChild(g),x.appendChild(A),w.appendChild(p),w.appendChild(B),L.appendChild(C),L.appendChild(f),L.appendChild(h),v.appendChild(E),v.appendChild(x),v.appendChild(w),v.appendChild(L),(e=>{const t=document.createElement("form"),n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","location"),n.setAttribute("placeholder","Location");const r=document.createElement("button");r.setAttribute("type","submit"),r.innerHTML="Search";const o=document.getElementById("top-first");t.appendChild(n),t.appendChild(r),o.insertBefore(t,o.firstChild)})(),(()=>{const t=document.querySelector("form"),n=document.querySelector("input");t.onsubmit=()=>(e(n.value),!1)})()})(n),((e,t="botContent")=>{for(let n=7;n<e.list.length;n+=8){const r=String.fromCodePoint(8451),o=document.getElementById(`${t}`),i=document.createElement("div"),a=new Date,c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];a.setTime(1e3*e.list[n].dt);const s=document.createElement("p");s.innerHTML=`${a.getDate()} ${c[a.getMonth()]}`;const l=document.createElement("p");l.innerHTML=e.list[n].weather[0].main;const d=document.createElement("p"),A=(e.list[n].main.feels_like-273.15).toPrecision(3);d.innerHTML=A+r;const p=document.createElement("p"),u=(e.list[n].main.temp-273.15).toPrecision(3);p.innerHTML=u+r,i.appendChild(s),i.appendChild(l),i.appendChild(d),i.appendChild(p),o.appendChild(i)}})(r)}catch(e){console.log(e)}return[n,r]}const t=e;var r=n(379),o=n.n(r),i=n(795),a=n.n(i),c=n(569),s=n.n(c),l=n(565),d=n.n(l),A=n(216),p=n.n(A),u=n(589),m=n.n(u),C=n(426),f={};f.styleTagTransform=m(),f.setAttributes=d(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),o()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals,(()=>{const e=document.querySelector("body"),t=document.createElement("div");t.setAttribute("id","content");const n=document.createElement("div");n.setAttribute("id","topContent");const r=document.createElement("div");r.setAttribute("id","botContent"),t.appendChild(n),t.appendChild(r),e.appendChild(t)})(),t("Singapore")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,