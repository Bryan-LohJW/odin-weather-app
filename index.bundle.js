(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>u});var o=n(537),r=n.n(o),a=n(645),i=n.n(a),c=n(667),s=n.n(c),d=new URL(n(159),n.b),l=i()(r()),p=s()(d);l.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n\n#content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url("+p+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#topContent {\n\tmargin: 100px;\n}\n\n#botContent {\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,gEAAgE;;AAEhE;CACC,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;;CAEnB,YAAY;CACZ,aAAa;;IAEV,yDAAwC;IACxC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,aAAa;AACd;;AAEA;AACA",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n\n#content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url('./clearsky.jpeg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#topContent {\n\tmargin: 100px;\n}\n\n#botContent {\n}"],sourceRoot:""}]);const u=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,p="".concat(d," ").concat(l);a[d]=l+1;var u=n(p),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var A=r(m,o);o.byIndex=c,t.splice(c,0,{identifier:p,updater:A,references:1})}i.push(p)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=o(e,r),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},159:(e,t,n)=>{e.exports=n.p+"7da5ba54b6139d94d7ef.jpeg"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{async function e(t){(()=>{const e=document.querySelector("#topContent"),t=document.querySelector("#botContent");for(;e.hasChildNodes();)e.removeChild(e.firstChild);for(;t.hasChildNodes();)t.removeChild(t.firstChild)})();try{const n="cd422b923b03f0e42f9bffddb3a4239d",o=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${t}&limit=1&appid=${n}`,{mode:"cors"}),r=await o.json(),{lon:a}=r[0],{lat:i}=r[0],c=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${i}&lon=${a}&appid=${n}`);((t,n="topContent",o="content")=>{const r=String.fromCodePoint(8451),{name:a}=t,i=t.weather[0].description,c=t.weather[0].main;let{temp:s}=t.main;const{speed:d}=t.wind,{humidity:l}=t.main;s-=273.15,s=s.toPrecision(3),console.log(t);const p=document.createElement("p");p.innerHTML=`${a}`;const u=document.createElement("p"),m=i.split(" ");let A="";for(let e=0;e<m.length;e+=1){const t=m[e].slice(0,1).toUpperCase(),n=m[e].slice(1,m[e].length);A+=`${t}${n} `,console.log(n)}A.trimEnd(),u.innerHTML=`${A}`,console.log(A);const h=document.createElement("p");h.innerHTML=`Temperature: ${s}${r}`;const f=document.createElement("p");f.innerHTML=`Humidity: ${l}%`;const b=document.createElement("p");b.innerHTML=`Wind Speed: ${(3.6*d).toPrecision(3)}kph`;const C=new Date;C.setTime(1e3*t.dt);const g=document.createElement("p");g.innerHTML=`${C.getDate()} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][C.getMonth()]}, ${["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"][C.getDay()-1]}`;const v=document.createElement("img"),y=document.getElementById(`${o}`);switch(!0){case"Thunderstorm"===c:v.setAttribute("src","../src/icons8-storm-96.png"),v.setAttribute("alt","Thunderstorm Icon"),y.classList.add("rainy");break;case"Drizzle"===c||"Rain"===c||"Snow"===c:v.setAttribute("src","../src/icons8-rain-96.png"),v.setAttribute("alt","Rain Icon"),y.classList.add("rainy");break;case"Clear"===c:v.setAttribute("src","../src/icons8-sun-192.png"),v.setAttribute("alt","Clear Icon"),y.classList.add("clear");break;case"Clouds"===c:v.setAttribute("src","../src/icons8-cloud-96.png"),v.setAttribute("alt","Cloudy Icon"),y.classList.add("cloudy");break;default:y.classList("clear")}const E=document.getElementById(`${n}`),w=document.createElement("div");w.setAttribute("id","top-first");const T=document.createElement("div");T.setAttribute("id","top-second");const k=document.createElement("div");k.setAttribute("id","top-third");const S=document.createElement("div");S.setAttribute("id","fourth-split"),w.appendChild(g),T.appendChild(p),k.appendChild(u),k.appendChild(v),S.appendChild(h),S.appendChild(f),S.appendChild(b),E.appendChild(w),E.appendChild(T),E.appendChild(k),E.appendChild(S),(e=>{const t=document.createElement("form"),n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","location"),n.setAttribute("placeholder","Location");const o=document.createElement("button");o.setAttribute("type","submit"),o.innerHTML="Search";const r=document.getElementById("top-first");t.appendChild(n),t.appendChild(o),r.insertBefore(t,r.firstChild)})(),(()=>{const t=document.querySelector("form"),n=document.querySelector("input");t.onsubmit=()=>(e(n.value),!1)})()})(await c.json());const s=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${i}&lon=${a}&appid=${n}`);((e,t="botContent")=>{for(let n=7;n<e.list.length;n+=8){console.log(e.list[n]);const o=String.fromCodePoint(8451),r=document.getElementById(`${t}`),a=document.createElement("div"),i=new Date,c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];i.setTime(1e3*e.list[n].dt);const s=document.createElement("p");s.innerHTML=`${i.getDate()} ${c[i.getMonth()]}`;const d=document.createElement("p");d.innerHTML=e.list[n].weather[0].main;const l=document.createElement("p"),p=(e.list[n].main.feels_like-273.15).toPrecision(3);l.innerHTML=p+o;const u=document.createElement("p"),m=(e.list[n].main.temp-273.15).toPrecision(3);u.innerHTML=m+o,a.appendChild(s),a.appendChild(d),a.appendChild(l),a.appendChild(u),r.appendChild(a)}})(await s.json())}catch(e){console.log(e)}}const t=e;var o=n(379),r=n.n(o),a=n(795),i=n.n(a),c=n(569),s=n.n(c),d=n(565),l=n.n(d),p=n(216),u=n.n(p),m=n(589),A=n.n(m),h=n(426),f={};f.styleTagTransform=A(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),r()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals,(()=>{const e=document.querySelector("body"),t=document.createElement("div");t.setAttribute("id","content");const n=document.createElement("div");n.setAttribute("id","topContent");const o=document.createElement("div");o.setAttribute("id","botContent"),t.appendChild(n),t.appendChild(o),e.appendChild(t)})(),t("Singapore")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,