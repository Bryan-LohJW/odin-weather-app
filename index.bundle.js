(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>p});var o=n(537),r=n.n(o),i=n(645),a=n.n(i),c=n(667),s=n.n(c),d=new URL(n(159),n.b),l=a()(r()),A=s()(d);l.push([t.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n#content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url("+A+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,gEAAgE;AAChE;CACC,6BAA6B;AAC9B;;AAEA;CACC,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;;CAEnB,YAAY;CACZ,aAAa;;IAEV,yDAAwC;IACxC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;CACT,iBAAiB;CACjB,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;AACV;;AAEA;CACC,WAAW;;CAEX,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;;CAEnB,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;;CAET,eAAe;AAChB;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,aAAa;CACb,6BAA6B;CAC7B,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n#content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url('./clearsky.jpeg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}"],sourceRoot:""}]);const p=l},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},a=[],c=0;c<t.length;c++){var s=t[c],d=o.base?s[0]+o.base:s[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var p=n(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var c=n(i[a]);e[c].references--}for(var s=o(t,r),d=0;d<i.length;d++){var l=n(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},159:(t,e,n)=>{t.exports=n.p+"7da5ba54b6139d94d7ef.jpeg"}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");o.length&&(t=o[o.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{async function t(e){try{const n="cd422b923b03f0e42f9bffddb3a4239d",o=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${e}&limit=1&appid=${n}`,{mode:"cors"}),r=await o.json(),{lon:i}=r[0],{lat:a}=r[0],c=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${a}&lon=${i}&appid=${n}`),s=await c.json(),d=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${a}&lon=${i}&appid=${n}`),l=await d.json();(()=>{const t=document.querySelector("#topContent"),e=document.querySelector("#botContent");for(;t.hasChildNodes();)t.removeChild(t.firstChild);for(;e.hasChildNodes();)e.removeChild(e.firstChild)})(),((e,n="topContent",o="content")=>{const r=String.fromCodePoint(8451),{name:i}=e,a=e.weather[0].description,c=e.weather[0].main;let{temp:s}=e.main;const{speed:d}=e.wind,{humidity:l}=e.main;s-=273.15,s=s.toPrecision(3),console.log(e);const A=document.createElement("p");A.innerHTML=`${i}`;const p=document.createElement("p"),u=a.split(" ");let m="";for(let t=0;t<u.length;t+=1){const e=u[t].slice(0,1).toUpperCase(),n=u[t].slice(1,u[t].length);m+=`${e}${n} `,console.log(n)}m.trimEnd(),p.innerHTML=`${m}`,console.log(m);const C=document.createElement("p");C.innerHTML=`Temperature: ${s}${r}`;const f=document.createElement("p");f.innerHTML=`Humidity: ${l}%`;const h=document.createElement("p");h.innerHTML=`Wind Speed: ${(3.6*d).toPrecision(3)}kph`;const b=new Date;b.setTime(1e3*e.dt);const g=document.createElement("p");g.innerHTML=`${b.getDate()} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][b.getMonth()]}, ${["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"][b.getDay()-1]}`;const y=document.createElement("img"),v=document.getElementById(`${o}`);switch(!0){case"Thunderstorm"===c:y.setAttribute("src","../src/icons8-storm-96.png"),y.setAttribute("alt","Thunderstorm Icon"),v.classList.add("rainy");break;case"Drizzle"===c||"Rain"===c||"Snow"===c:y.setAttribute("src","../src/icons8-rain-96.png"),y.setAttribute("alt","Rain Icon"),v.classList.add("rainy");break;case"Clear"===c:y.setAttribute("src","../src/icons8-sun-192.png"),y.setAttribute("alt","Clear Icon"),v.classList.add("clear");break;case"Clouds"===c:y.setAttribute("src","../src/icons8-cloud-96.png"),y.setAttribute("alt","Cloudy Icon"),v.classList.add("cloudy");break;default:v.classList("clear")}const B=document.getElementById(`${n}`),x=document.createElement("div");x.setAttribute("id","top-first");const E=document.createElement("div");E.setAttribute("id","top-second");const w=document.createElement("div");w.setAttribute("id","top-third");const k=document.createElement("div");k.setAttribute("id","top-fourth"),x.appendChild(g),E.appendChild(A),w.appendChild(p),w.appendChild(y),k.appendChild(C),k.appendChild(f),k.appendChild(h),B.appendChild(x),B.appendChild(E),B.appendChild(w),B.appendChild(k),(t=>{const e=document.createElement("form"),n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","location"),n.setAttribute("placeholder","Location");const o=document.createElement("button");o.setAttribute("type","submit"),o.innerHTML="Search";const r=document.getElementById("top-first");e.appendChild(n),e.appendChild(o),r.insertBefore(e,r.firstChild)})(),(()=>{const e=document.querySelector("form"),n=document.querySelector("input");e.onsubmit=()=>(t(n.value),!1)})()})(s),((t,e="botContent")=>{for(let n=7;n<t.list.length;n+=8){console.log(t.list[n]);const o=String.fromCodePoint(8451),r=document.getElementById(`${e}`),i=document.createElement("div"),a=new Date,c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];a.setTime(1e3*t.list[n].dt);const s=document.createElement("p");s.innerHTML=`${a.getDate()} ${c[a.getMonth()]}`;const d=document.createElement("p");d.innerHTML=t.list[n].weather[0].main;const l=document.createElement("p"),A=(t.list[n].main.feels_like-273.15).toPrecision(3);l.innerHTML=A+o;const p=document.createElement("p"),u=(t.list[n].main.temp-273.15).toPrecision(3);p.innerHTML=u+o,i.appendChild(s),i.appendChild(d),i.appendChild(l),i.appendChild(p),r.appendChild(i)}})(l)}catch(t){console.log(t)}}const e=t;var o=n(379),r=n.n(o),i=n(795),a=n.n(i),c=n(569),s=n.n(c),d=n(565),l=n.n(d),A=n(216),p=n.n(A),u=n(589),m=n.n(u),C=n(426),f={};f.styleTagTransform=m(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals,(()=>{const t=document.querySelector("body"),e=document.createElement("div");e.setAttribute("id","content");const n=document.createElement("div");n.setAttribute("id","topContent");const o=document.createElement("div");o.setAttribute("id","botContent"),e.appendChild(n),e.appendChild(o),t.appendChild(e)})(),e("Singapore")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,