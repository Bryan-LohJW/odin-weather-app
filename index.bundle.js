(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>f});var r=n(537),o=n.n(r),i=n(645),a=n.n(i),c=n(667),s=n.n(c),A=new URL(n(159),n.b),l=new URL(n(770),n.b),d=new URL(n(464),n.b),u=a()(o()),p=s()(A),m=s()(l),C=s()(d);u.push([t.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n.content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url("+p+");\n    background-size: cover;\n    background-repeat: no-repeat;\n\n\ttransition: 1000ms;\n}\n\n#rainy {\n\tbackground-image: url("+m+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#cloudy {\n\tbackground-image: url("+C+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#clear {\n\tbackground-image: url("+p+");\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\ninput {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\ttext-align: center;\n\tmargin-right: 2rem;\n}\n\nform button {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\tbackground-color: white;\n\ttransition: 500ms;\n}\n\nbutton:hover {\n\tfilter: brightness(0.8);\n}\n\n#unit-switch {\n\tborder-radius: 0.5rem;\n\tfont-size: 1rem;\n\tpadding: 0.5rem 1.5rem;\n\ttransition: 500ms;\n}\n\n#date {\n\tfont-size: 1.5rem;\n}\n\n.temperature::before {\n\tcontent: 'Temperature: ';\n}\n\n.metric.temperature::after {\n\tcontent: '\\00B0 C';\n}\n\n.speed::before {\n\tcontent: 'Wind Speed: ';\n}\n\n.metric.speed::after {\n\tcontent: 'kph';\n}\n\n.imperial.temperature::after {\n\tcontent: '\\00B0 F';\n}\n\n.imperial.speed::after {\n\tcontent: 'mph';\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,gEAAgE;AAChE;CACC,6BAA6B;AAC9B;;AAEA;CACC,YAAY;CACZ,sBAAsB;CACtB,mBAAmB;;CAEnB,YAAY;CACZ,aAAa;;IAEV,yDAAwC;IACxC,sBAAsB;IACtB,4BAA4B;;CAE/B,kBAAkB;AACnB;;AAEA;CACC,yDAAoC;IACjC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,yDAAqC;IAClC,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;CACC,yDAAwC;IACrC,sBAAsB;IACtB,4BAA4B;AAChC;;;;AAIA;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;CACT,iBAAiB;CACjB,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;AACV;;AAEA;CACC,WAAW;;CAEX,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;;CAEnB,eAAe;AAChB;;AAEA;CACC,WAAW;;CAEX,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;;CAET,eAAe;AAChB;;AAEA;CACC,qBAAqB;;CAErB,iBAAiB;CACjB,kBAAkB;CAClB,kBAAkB;AACnB;;AAEA;CACC,qBAAqB;;CAErB,iBAAiB;CACjB,uBAAuB;CACvB,iBAAiB;AAClB;;AAEA;CACC,uBAAuB;AACxB;;AAEA;CACC,qBAAqB;CACrB,eAAe;CACf,sBAAsB;CACtB,iBAAiB;AAClB;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,wBAAwB;AACzB;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,uBAAuB;AACxB;;AAEA;CACC,cAAc;AACf;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,cAAc;AACf;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,aAAa;CACb,6BAA6B;CAC7B,mBAAmB;CACnB,UAAU;CACV,iBAAiB;;CAEjB,YAAY;CACZ,6BAA6B;;CAE7B,mBAAmB;AACpB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ........................................................... */\n:root{\n\t--background: rgba(0,0,0,0.4);\n}\n\n.content {\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100vw;\n\theight: 100vh;\n\n    background-image: url('./clearsky.jpeg');\n    background-size: cover;\n    background-repeat: no-repeat;\n\n\ttransition: 1000ms;\n}\n\n#rainy {\n\tbackground-image: url('./rainy.jpg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#cloudy {\n\tbackground-image: url('./cloudy.jpg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#clear {\n\tbackground-image: url('./clearsky.jpeg');\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n\n\n#topContent {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 50px;\n\tmargin-top: 150px;\n\tmargin-bottom: 30vh;\n\twidth: 80%;\n\tpadding: 20px 0px;\n\t\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}\n\n#top-first {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n}\n\n#top-second {\n\tflex: 1 1 0;\n\t\n\tfont-size: 4rem;\n}\n\n#top-third {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: 2rem;\n}\n\n#top-fourth {\n\tflex: 1 1 0;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-size: 2rem;\n}\n\ninput {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\ttext-align: center;\n\tmargin-right: 2rem;\n}\n\nform button {\n\tborder-radius: 0.5rem;\n\n\tfont-size: 1.5rem;\n\tbackground-color: white;\n\ttransition: 500ms;\n}\n\nbutton:hover {\n\tfilter: brightness(0.8);\n}\n\n#unit-switch {\n\tborder-radius: 0.5rem;\n\tfont-size: 1rem;\n\tpadding: 0.5rem 1.5rem;\n\ttransition: 500ms;\n}\n\n#date {\n\tfont-size: 1.5rem;\n}\n\n.temperature::before {\n\tcontent: 'Temperature: ';\n}\n\n.metric.temperature::after {\n\tcontent: '\\00B0 C';\n}\n\n.speed::before {\n\tcontent: 'Wind Speed: ';\n}\n\n.metric.speed::after {\n\tcontent: 'kph';\n}\n\n.imperial.temperature::after {\n\tcontent: '\\00B0 F';\n}\n\n.imperial.speed::after {\n\tcontent: 'mph';\n}\n\ninput {\n\twidth: 150px;\n}\n\n#top-third img{\n\twidth: 100px;\n\theight: 100px;\n}\n\n#botContent {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 80%;\n\tpadding: 50px 0px;\n\n\tcolor: white;\n\tbackground: var(--background);\n\n\tborder-radius: 2rem;\n}"],sourceRoot:""}]);const f=u},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<t.length;A++){var l=[].concat(t[A]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},a=[],c=0;c<t.length;c++){var s=t[c],A=r.base?s[0]+r.base:s[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var u=n(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var c=n(i[a]);e[c].references--}for(var s=r(t,o),A=0;A<i.length;A++){var l=n(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},159:(t,e,n)=>{t.exports=n.p+"7da5ba54b6139d94d7ef.jpeg"},464:(t,e,n)=>{t.exports=n.p+"2a34ad296faa40d5d03e.jpg"},770:(t,e,n)=>{t.exports=n.p+"cda0fd930c91dce5cfe0.jpg"}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{const t=()=>{const t=document.getElementsByClassName("metric"),e=document.getElementsByClassName("imperial");for(let e=0;e<t.length;e+=1)if(t[e].classList.contains("temperature")){let n=Number(t[e].innerHTML);console.log(n),n=1.8*n+32,console.log(n),t[e].innerHTML=n.toPrecision(3),console.log(n)}else if(t[e].classList.contains("speed")){let n=Number(t[e].innerHTML);n/=1.609,console.log(t[e]),t[e].innerHTML=n.toPrecision(3)}for(let t=0;t<e.length;t+=1)if(e[t].classList.contains("temperature")){let n=Number(e[t].innerHTML);n=5/9*(n-32),e[t].innerHTML=n.toPrecision(3)}else if(e[t].classList.contains("speed")){let n=Number(e[t].innerHTML);n*=1.609,e[t].innerHTML=n.toPrecision(3)}const n=document.getElementsByClassName("speed"),r=document.getElementsByClassName("temperature");for(let t=0;t<n.length;t+=1)n[t].classList.toggle("imperial"),n[t].classList.toggle("metric");for(let t=0;t<r.length;t+=1)r[t].classList.toggle("imperial"),r[t].classList.toggle("metric");null===localStorage.getItem("unit")||"imperial"===localStorage.getItem("unit")?localStorage.setItem("unit","metric"):"metric"===localStorage.getItem("unit")&&localStorage.setItem("unit","imperial")};async function e(n){let r,o;try{const i="cd422b923b03f0e42f9bffddb3a4239d",a=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${n}&limit=1&appid=${i}`,{mode:"cors"}),c=await a.json(),{lon:s}=c[0],{lat:A}=c[0],l=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${A}&lon=${s}&appid=${i}`);r=await l.json();const d=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${A}&lon=${s}&appid=${i}`);o=await d.json(),(()=>{const t=document.querySelector("#topContent"),e=document.querySelector("#botContent");for(;t.hasChildNodes();)t.removeChild(t.firstChild);for(;e.hasChildNodes();)e.removeChild(e.firstChild)})(),((n,r="topContent",o="content")=>{const{name:i}=n,a=n.weather[0].description,c=n.weather[0].main;let{temp:s}=n.main;const{speed:A}=n.wind,{humidity:l}=n.main;s-=273.15,s=s.toPrecision(3);const d=document.createElement("button");d.setAttribute("id","unit-switch"),d.innerHTML="Switch Units",d.addEventListener("click",(()=>{t()}));const u=document.createElement("p");u.innerHTML=`${i}`;const p=document.createElement("p"),m=a.split(" ");let C="";for(let t=0;t<m.length;t+=1)C+=`${m[t].slice(0,1).toUpperCase()}${m[t].slice(1,m[t].length)} `;C.trimEnd(),p.innerHTML=`${C}`;const f=document.createElement("p");f.innerHTML=`${s}`,f.classList.add("metric"),f.classList.add("temperature");const g=document.createElement("p");g.innerHTML=`Humidity: ${l}%`;const b=document.createElement("p");b.innerHTML=`${(3.6*A).toPrecision(3)}`,b.classList.add("metric"),b.classList.add("speed");const h=new Date;h.setTime(1e3*n.dt);const B=document.createElement("p");B.setAttribute("id","date"),B.innerHTML=`${h.getDate()} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][h.getMonth()]}, ${["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"][h.getDay()-1]}`;const y=document.createElement("img"),v=document.querySelector(`.${o}`);switch(!0){case"Thunderstorm"===c:y.setAttribute("src","../src/icons8-storm-96.png"),y.setAttribute("alt","Thunderstorm Icon"),v.setAttribute("id","rainy");break;case"Drizzle"===c||"Rain"===c||"Snow"===c:y.setAttribute("src","../src/icons8-rain-96.png"),y.setAttribute("alt","Rain Icon"),v.setAttribute("id","rainy");break;case"Clear"===c:y.setAttribute("src","../src/icons8-sun-192.png"),y.setAttribute("alt","Clear Icon"),v.setAttribute("id","clear");break;case"Clouds"===c:y.setAttribute("src","../src/icons8-cloud-96.png"),y.setAttribute("alt","Cloudy Icon"),v.setAttribute("id","cloudy");break;default:v.classList("clear")}const E=document.getElementById(`${r}`),k=document.createElement("div");k.setAttribute("id","top-first");const x=document.createElement("div");x.setAttribute("id","top-second");const w=document.createElement("div");w.setAttribute("id","top-third");const L=document.createElement("div");L.setAttribute("id","top-fourth"),k.appendChild(d),k.appendChild(B),x.appendChild(u),w.appendChild(p),w.appendChild(y),L.appendChild(f),L.appendChild(g),L.appendChild(b),E.appendChild(k),E.appendChild(x),E.appendChild(w),E.appendChild(L),(t=>{const e=document.createElement("form"),n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","location"),n.setAttribute("placeholder","Location");const r=document.createElement("button");r.setAttribute("type","submit"),r.innerHTML="Search";const o=document.getElementById("top-first");e.appendChild(n),e.appendChild(r),o.insertBefore(e,o.firstChild)})(),(()=>{const t=document.querySelector("form"),n=document.querySelector("input");t.onsubmit=()=>(e(n.value),!1)})(),"imperial"===localStorage.getItem("unit")&&(t(),localStorage.setItem("unit","imperial"))})(r),((t,e="botContent")=>{for(let n=7;n<t.list.length;n+=8){const r=String.fromCodePoint(8451),o=document.getElementById(`${e}`),i=document.createElement("div"),a=new Date,c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];a.setTime(1e3*t.list[n].dt);const s=document.createElement("p");s.innerHTML=`${a.getDate()} ${c[a.getMonth()]}`;const A=document.createElement("p");A.innerHTML=t.list[n].weather[0].main;const l=document.createElement("p"),d=(t.list[n].main.feels_like-273.15).toPrecision(3);l.innerHTML=d+r;const u=document.createElement("p"),p=(t.list[n].main.temp-273.15).toPrecision(3);u.innerHTML=p+r,i.appendChild(s),i.appendChild(A),i.appendChild(l),i.appendChild(u),o.appendChild(i)}})(o)}catch(t){console.log(t)}return[r,o]}const r=e;var o=n(379),i=n.n(o),a=n(795),c=n.n(a),s=n(569),A=n.n(s),l=n(565),d=n.n(l),u=n(216),p=n.n(u),m=n(589),C=n.n(m),f=n(426),g={};g.styleTagTransform=C(),g.setAttributes=d(),g.insert=A().bind(null,"head"),g.domAPI=c(),g.insertStyleElement=p(),i()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals,(()=>{const t=document.querySelector("body"),e=document.createElement("div");e.classList.add("content");const n=document.createElement("div");n.setAttribute("id","topContent");const r=document.createElement("div");r.setAttribute("id","botContent"),e.appendChild(n),e.appendChild(r),t.appendChild(e)})(),r("Singapore")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,